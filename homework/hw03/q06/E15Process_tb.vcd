$date
	Thu Sep 28 01:12:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module E15Process_TB $end
$var reg 1 ! clk $end
$scope module proc $end
$var wire 1 " addNotSub $end
$var wire 1 ! clk $end
$var wire 4 # storeVal [3:0] $end
$var wire 2 $ src [1:0] $end
$var wire 1 % pcz $end
$var wire 4 & pcRes [3:0] $end
$var wire 4 ' pcIncr [3:0] $end
$var wire 4 ( operand2 [3:0] $end
$var wire 4 ) operand1 [3:0] $end
$var wire 4 * opCode [3:0] $end
$var wire 4 + immData [3:0] $end
$var wire 2 , dst [1:0] $end
$var wire 1 - aluOutputZero $end
$var wire 4 . aluOutput [3:0] $end
$var parameter 2 / RXX $end
$var parameter 2 0 Rg0 $end
$var parameter 2 1 Rg1 $end
$var parameter 2 2 Rg2 $end
$var parameter 2 3 Rg3 $end
$var parameter 4 4 add $end
$var parameter 4 5 addi $end
$var parameter 4 6 cmp $end
$var parameter 4 7 cmpi $end
$var parameter 4 8 jmp $end
$var parameter 4 9 jnz $end
$var parameter 4 : jz $end
$var parameter 4 ; mov $end
$var parameter 4 < movi $end
$var parameter 4 = sub $end
$var parameter 4 > subi $end
$var reg 4 ? pc [3:0] $end
$var reg 4 @ r0 [3:0] $end
$var reg 4 A r1 [3:0] $end
$var reg 4 B r2 [3:0] $end
$var reg 4 C r3 [3:0] $end
$var reg 1 D zFlag $end
$scope module dataALU $end
$var wire 1 " addNotSub $end
$var wire 4 E dst [3:0] $end
$var wire 4 F src [3:0] $end
$var wire 1 - zFlag $end
$var wire 4 G res [3:0] $end
$var wire 1 H Cout $end
$scope module the_adder $end
$var wire 4 I A [3:0] $end
$var wire 4 J B [3:0] $end
$var wire 1 K Cin $end
$var wire 1 L temp2 $end
$var wire 1 M temp1 $end
$var wire 1 N temp0 $end
$var wire 4 O S [3:0] $end
$var wire 1 H Cout $end
$scope module first $end
$var wire 1 P A $end
$var wire 1 Q B $end
$var wire 1 K Cin $end
$var wire 1 N Cout $end
$var wire 1 R S $end
$upscope $end
$scope module fourth $end
$var wire 1 S A $end
$var wire 1 T B $end
$var wire 1 H Cout $end
$var wire 1 U S $end
$var wire 1 L Cin $end
$upscope $end
$scope module second $end
$var wire 1 V A $end
$var wire 1 W B $end
$var wire 1 N Cin $end
$var wire 1 M Cout $end
$var wire 1 X S $end
$upscope $end
$scope module third $end
$var wire 1 Y A $end
$var wire 1 Z B $end
$var wire 1 M Cin $end
$var wire 1 L Cout $end
$var wire 1 [ S $end
$upscope $end
$upscope $end
$upscope $end
$scope module pcALU $end
$var wire 1 \ addNotSub $end
$var wire 4 ] dst [3:0] $end
$var wire 4 ^ src [3:0] $end
$var wire 1 % zFlag $end
$var wire 4 _ res [3:0] $end
$var wire 1 ` Cout $end
$scope module the_adder $end
$var wire 4 a A [3:0] $end
$var wire 4 b B [3:0] $end
$var wire 1 c Cin $end
$var wire 1 d temp2 $end
$var wire 1 e temp1 $end
$var wire 1 f temp0 $end
$var wire 4 g S [3:0] $end
$var wire 1 ` Cout $end
$scope module first $end
$var wire 1 h A $end
$var wire 1 i B $end
$var wire 1 c Cin $end
$var wire 1 f Cout $end
$var wire 1 j S $end
$upscope $end
$scope module fourth $end
$var wire 1 k A $end
$var wire 1 l B $end
$var wire 1 ` Cout $end
$var wire 1 m S $end
$var wire 1 d Cin $end
$upscope $end
$scope module second $end
$var wire 1 n A $end
$var wire 1 o B $end
$var wire 1 f Cin $end
$var wire 1 e Cout $end
$var wire 1 p S $end
$upscope $end
$scope module third $end
$var wire 1 q A $end
$var wire 1 r B $end
$var wire 1 e Cin $end
$var wire 1 d Cout $end
$var wire 1 s S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1101 >
b1100 =
b1001 <
b1000 ;
b10 :
b11 9
b0 8
b1111 7
b1110 6
b1011 5
b1010 4
b11 3
b10 2
b1 1
b0 0
b0 /
$end
#0
$dumpvars
0s
0r
0q
0p
0o
0n
0m
0l
0k
1j
0i
1h
b1 g
0f
0e
0d
0c
b0 b
b1 a
0`
b1 _
b0 ^
b1 ]
1\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
bx O
xN
xM
xL
1K
bx J
bx I
xH
bx G
bx F
bx E
xD
bx C
bx B
bx A
bx @
b0 ?
bx .
x-
b10 ,
b0 +
b1001 *
bx )
bx (
b1 '
b1 &
0%
b0 $
b0 #
0"
0!
$end
#30
1p
1f
b111 #
0%
b10 &
b10 _
b10 g
0j
b1 ,
b111 +
1i
b1 b
b1 ?
b1 ^
b0 B
1!
#60
0!
#90
1H
0U
1L
1R
0X
0-
b101 .
b101 G
b101 O
1[
1M
1Q
0W
1Z
1T
b1101 J
1N
b10 )
b10 F
0f
0s
b101 #
1j
0%
b11 &
b11 _
b11 g
1p
0e
1P
1V
1Y
0S
b111 (
b111 E
b111 I
b1101 *
b10 +
0i
1o
b10 b
b10 ?
b10 ^
b111 A
1!
#120
0!
#150
0[
0M
1s
b11 #
0N
0L
0U
0H
1e
0%
0p
1X
b11 .
b11 G
b11 O
1R
1W
0Z
0T
0P
0Y
1f
0K
b11 J
b100 &
b100 _
b100 g
0j
0V
1"
b11 )
b11 F
b0 (
b0 E
b0 I
b1011 *
b10 ,
b11 +
1i
b11 b
b11 ?
b11 ^
b101 A
0D
1!
#180
0!
#210
1[
1H
1M
0-
1L
b100 #
1N
0X
0U
b100 .
b100 G
b100 O
0R
0Q
1W
1Z
1T
0f
0m
1P
1Y
1K
b1110 J
1j
0p
0e
0%
b101 &
b101 _
b101 g
1s
0d
b101 (
b101 E
b101 I
0"
b1 )
b1 F
b1111 *
b1 ,
b1 +
0i
0o
1r
b100 b
b100 ?
b100 ^
b11 B
1!
#240
0!
#270
xN
xH
xL
bx #
xZ
xT
xM
xR
xX
x-
x[
bx .
bx G
bx O
xU
xQ
xW
1p
bx J
1f
xP
xV
xY
xS
b110 &
b110 _
b110 g
0j
bx (
bx E
bx I
bx )
bx F
b10 *
b0 ,
b10 +
1i
b101 b
b101 ?
b101 ^
1!
#300
0!
#330
1M
1N
1`
1d
0f
0s
0h
1q
1k
1P
1V
0Y
0S
0j
b10 &
b10 _
b10 g
1p
0e
b1100 '
b1100 ]
b1100 a
b11 (
b11 E
b11 I
b0 *
b10 ,
b1100 +
0i
1o
b110 b
b110 ?
b110 ^
1!
#360
0!
#390
b11 #
0[
1R
0-
1X
b11 .
b11 G
b11 O
0U
1H
1Q
0W
1Z
1T
0M
1L
b1101 J
0`
1j
b10 )
b10 F
0V
1Y
0d
b101 (
b101 E
b101 I
1h
0q
0k
b11 &
b11 _
b11 g
0s
b1 '
b1 ]
b1 a
b1101 *
b1 ,
b10 +
0r
b10 b
b10 ?
b10 ^
1!
#420
0!
#450
1s
b110 #
0H
1e
1M
0L
0%
0p
1X
1[
b110 .
b110 G
b110 O
0R
1W
0Z
0T
1f
0K
b11 J
b100 &
b100 _
b100 g
0j
1V
0Y
1"
b11 )
b11 F
b11 (
b11 E
b11 I
b1011 *
b10 ,
b11 +
1i
b11 b
b11 ?
b11 ^
b11 A
1!
#480
0!
#510
1H
0-
b10 #
1X
0[
1L
0U
b10 .
b10 G
b10 O
0R
0Q
1W
1Z
1T
0f
0m
1K
b1110 J
1j
0p
0e
0%
b101 &
b101 _
b101 g
1s
0d
0"
b1 )
b1 F
b1111 *
b1 ,
b1 +
0i
0o
1r
b100 b
b100 ?
b100 ^
b110 B
1!
#540
0!
#570
xN
xH
xL
bx #
xZ
xT
xM
xR
x-
xX
x[
bx .
bx G
bx O
xU
xQ
xW
1p
bx J
1f
xP
xV
xY
xS
b110 &
b110 _
b110 g
0j
bx (
bx E
bx I
bx )
bx F
b10 *
b0 ,
b10 +
1i
b101 b
b101 ?
b101 ^
1!
#600
0!
#630
1`
1d
0f
0s
0h
1q
1k
0P
1V
1Y
0S
0j
b10 &
b10 _
b10 g
1p
0e
b1100 '
b1100 ]
b1100 a
b110 (
b110 E
b110 I
b0 *
b10 ,
b1100 +
0i
1o
b110 b
b110 ?
b110 ^
1!
#660
0!
#690
1H
0U
1L
b1 #
0[
1M
0-
1R
b1 .
b1 G
b1 O
0X
1Q
0W
1Z
1T
1N
b1101 J
0`
1j
b10 )
b10 F
1P
0Y
0d
b11 (
b11 E
b11 I
1h
0q
0k
b11 &
b11 _
b11 g
0s
b1 '
b1 ]
b1 a
b1101 *
b1 ,
b10 +
0r
b10 b
b10 ?
b10 ^
1!
#720
0!
#750
1s
b1001 #
0N
1U
0H
1e
0%
0p
0X
0-
b1001 .
b1001 G
b1001 O
1R
1W
0Z
0T
0P
1Y
1f
0K
b11 J
b100 &
b100 _
b100 g
0j
1V
1"
b11 )
b11 F
b110 (
b110 E
b110 I
b1011 *
b10 ,
b11 +
1i
b11 b
b11 ?
b11 ^
b1 A
1!
#780
0!
#810
1L
0[
1M
b0 #
1N
1-
0U
1H
b0 .
b0 G
b0 O
0R
0Q
1W
1Z
1T
0f
0m
1P
0V
0Y
1K
b1110 J
1j
0p
0e
0%
b101 &
b101 _
b101 g
1s
0d
b1 (
b1 E
b1 I
0"
b1 )
b1 F
b1111 *
b1 ,
b1 +
0i
0o
1r
b100 b
b100 ?
b100 ^
b1001 B
1!
#840
0!
#870
0m
0d
xN
xH
xL
1s
bx #
0e
xZ
xT
xM
xR
xX
x[
x-
bx .
bx G
bx O
xU
xQ
xW
1p
0h
1n
bx J
0f
b10 '
b10 ]
b10 a
xP
xV
xY
xS
b111 &
b111 _
b111 g
1j
bx (
bx E
bx I
bx )
bx F
b10 *
b0 ,
b10 +
1i
b101 b
b101 ?
b101 ^
1D
1!
#900
0!
#930
0m
0d
1s
0e
0n
b111 &
b111 _
b111 g
1p
b0 '
b0 ]
b0 a
b0 *
b0 +
1o
b111 b
b111 ?
b111 ^
1!
#960
0!
#990
1!
#1020
0!
#1050
1!
#1080
0!
#1110
1!
#1140
0!
#1170
1!
#1200
0!
#1230
1!
#1260
0!
#1290
1!
#1320
0!
#1350
1!
#1380
0!
#1410
1!
#1440
0!
#1470
1!
#1500
0!
#1530
1!
#1560
0!
#1590
1!
#1620
0!
#1650
1!
#1680
0!
#1710
1!
#1740
0!
#1770
1!
#1800
0!
#1830
1!
#1860
0!
#1890
1!
#1920
0!
#1950
1!
#1980
0!
#2010
1!
#2040
0!
#2070
1!
#2100
0!
#2130
1!
#2160
0!
#2190
1!
#2220
0!
#2250
1!
#2280
0!
#2310
1!
#2340
0!
#2370
1!
#2400
0!
#2430
1!
#2460
0!
#2490
1!
#2520
0!
#2550
1!
#2580
0!
#2610
1!
#2640
0!
#2670
1!
#2700
0!
#2730
1!
#2760
0!
#2790
1!
#2820
0!
#2850
1!
#2880
0!
#2910
1!
#2940
0!
#2970
1!
#3000
0!
#3030
1!
#3060
0!
#3090
1!
#3120
0!
#3150
1!
#3180
0!
#3210
1!
#3240
0!
#3270
1!
#3300
0!
#3330
1!
#3360
0!
#3390
1!
#3420
0!
#3450
1!
#3480
0!
#3510
1!
#3540
0!
#3570
1!
#3600
0!
#3630
1!
#3660
0!
#3690
1!
#3720
0!
#3750
1!
#3780
0!
#3810
1!
#3840
0!
#3870
1!
#3900
0!
#3930
1!
#3960
0!
#3990
1!
#4020
0!
#4050
1!
#4080
0!
#4110
1!
#4140
0!
#4170
1!
#4200
0!
#4230
1!
#4260
0!
#4290
1!
#4320
0!
#4350
1!
#4380
0!
#4410
1!
#4440
0!
#4470
1!
#4500
0!
#4530
1!
#4560
0!
#4590
1!
#4620
0!
#4650
1!
#4680
0!
#4710
1!
#4740
0!
#4770
1!
#4800
0!
#4830
1!
#4860
0!
#4890
1!
#4920
0!
#4950
1!
#4980
0!
#5010
1!
#5040
0!
#5070
1!
#5100
0!
#5130
1!
#5160
0!
#5190
1!
#5220
0!
#5250
1!
#5280
0!
#5310
1!
#5340
0!
#5370
1!
#5400
0!
#5430
1!
#5460
0!
#5490
1!
#5520
0!
#5550
1!
#5580
0!
#5610
1!
#5640
0!
#5670
1!
#5700
0!
#5730
1!
#5760
0!
#5790
1!
#5820
0!
#5850
1!
#5880
0!
#5910
1!
#5940
0!
#5970
1!
#6000
0!
#6030
1!
#6060
0!
#6090
1!
#6120
0!
#6150
1!
#6180
0!
#6210
1!
#6240
0!
#6270
1!
#6300
0!
#6330
1!
#6360
0!
#6390
1!
#6420
0!
#6450
1!
#6480
0!
#6510
1!
#6540
0!
#6570
1!
#6600
0!
#6630
1!
#6660
0!
#6690
1!
#6720
0!
#6750
1!
#6780
0!
#6810
1!
#6840
0!
#6870
1!
#6900
0!
#6930
1!
#6960
0!
#6990
1!
#7020
0!
#7050
1!
#7080
0!
#7110
1!
#7140
0!
#7170
1!
#7200
0!
#7230
1!
#7260
0!
#7290
1!
#7320
0!
#7350
1!
#7380
0!
#7410
1!
#7440
0!
#7470
1!
#7500
0!
#7530
1!
#7560
0!
#7590
1!
#7620
0!
#7650
1!
#7680
0!
#7710
1!
#7740
0!
#7770
1!
#7800
0!
#7830
1!
#7860
0!
#7890
1!
#7920
0!
#7950
1!
#7980
0!
#8010
1!
#8040
0!
#8070
1!
#8100
0!
#8130
1!
#8160
0!
#8190
1!
#8220
0!
#8250
1!
#8280
0!
#8310
1!
#8340
0!
#8370
1!
#8400
0!
#8430
1!
#8460
0!
#8490
1!
#8520
0!
#8550
1!
#8580
0!
#8610
1!
#8640
0!
#8670
1!
#8700
0!
#8730
1!
#8760
0!
#8790
1!
#8820
0!
#8850
1!
#8880
0!
#8910
1!
#8940
0!
#8970
1!
#9000
0!
#9030
1!
#9060
0!
#9090
1!
#9120
0!
#9150
1!
#9180
0!
#9210
1!
#9240
0!
#9270
1!
#9300
0!
#9330
1!
#9360
0!
#9390
1!
#9420
0!
#9450
1!
#9480
0!
#9510
1!
#9540
0!
#9570
1!
#9600
0!
#9630
1!
#9660
0!
#9690
1!
#9720
0!
#9750
1!
#9780
0!
#9810
1!
#9840
0!
#9870
1!
#9900
0!
#9930
1!
#9960
0!
#9990
1!
#10000
